// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  name String
  email String @unique
  password String
  bio String?
  profilePicture String?
  googleId  String?  @unique
  role UserRoles @default(MEMBER)
  createdProjects Project[]
  teamProjects Project[] @relation("ProjectTeam")
  assignedTasks Task[] @relation("AssignedTasks")
  createdTasks Task[] @relation("CreatedTasks")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Project {
  id Int @id @default(autoincrement())
  name String
  description String?
  user User @relation(fields: [userId], references: [id])
  userId String
  teamMembers User[] @relation("ProjectTeam")
  Tasks Task[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Task {
  id Int @id @default(autoincrement())
  title String
  description String?
  status TaskStatus @default(NOT_STARTED)
  priority TaskPriorities @default(LOW)
  dueDate DateTime?
  project Project @relation(fields: [projectId], references: [id])
  projectId Int
  assignedTo  User? @relation("AssignedTasks", fields: [assignedToId], references: [id])
  assignedToId String?
  createdBy User @relation("CreatedTasks", fields: [createdById], references: [id])
  createdById String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum TaskPriorities {
  LOW
  MEDIUM
  HIGH
}

enum TaskStatus {
  NOT_STARTED
  IN_PROGRESS
  COMPLETED
}

enum UserRoles {
  ADMIN
  TEAMLEAD
  MEMBER
}